/**
 * https://fsymbols.com/generators/carty/
 * @param title
 * @returns
 */
 export function asciiTitle(title: string): string {
   let out = "";
   for (let i = 0; i < 6; i++) {
       title.split("").forEach(letter => {
           const key = letter.toUpperCase();
           if (alphabet[key] !== undefined) {
               out += alphabet[key][i];
           }
       });
       out += "\n";
   }
   return out;
}

// prettier-ignore
const alphabet:{[letter:string]:string[]} = {
   A:["░█████╗░",
      "██╔══██╗",
      "███████║",
      "██╔══██║",
      "██║░░██║",
      "╚═╝░░╚═╝"],
   B:["██████╗░",
      "██╔══██╗",
      "██████╦╝",
      "██╔══██╗",
      "██████╦╝",
      "╚═════╝░"],
   C:["░█████╗░",
      "██╔══██╗",
      "██║░░╚═╝",
      "██║░░██╗",
      "╚█████╔╝",
      "░╚════╝░"],
   D:["██████╗░",
      "██╔══██╗",
      "██║░░██║",
      "██║░░██║",
      "██████╔╝",
      "╚═════╝░"],
   E:["███████╗",
      "██╔════╝",
      "█████╗░░",
      "██╔══╝░░",
      "███████╗",
      "╚══════╝"],
   F:["███████╗",
      "██╔════╝",
      "█████╗░░",
      "██╔══╝░░",
      "██║░░░░░",
      "╚═╝░░░░░"],
   G:["░██████╗░",
      "██╔════╝░",
      "██║░░██╗░",
      "██║░░╚██╗",
      "╚██████╔╝",
      "░╚═════╝░"],
   H:["██╗░░██╗",
      "██║░░██║",
      "███████║",
      "██╔══██║",
      "██║░░██║",
      "╚═╝░░╚═╝"],
   I:["██╗",
      "██║",
      "██║",
      "██║",
      "██║",
      "╚═╝"],
   J:["░░░░░██╗",
      "░░░░░██║",
      "░░░░░██║",
      "██╗░░██║",
      "╚█████╔╝",
      "░╚════╝░"],
   K:["██╗░░██╗",
      "██║░██╔╝",
      "█████═╝░",
      "██╔═██╗░",
      "██║░╚██╗",
      "╚═╝░░╚═╝"],
   L:["██╗░░░░░",
      "██║░░░░░",
      "██║░░░░░",
      "██║░░░░░",
      "███████╗",
      "╚══════╝"],
   M:["███╗░░░███╗",
      "████╗░████║",
      "██╔████╔██║",
      "██║╚██╔╝██║",
      "██║░╚═╝░██║",
      "╚═╝░░░░░╚═╝"],
   N:["███╗░░██╗",
      "████╗░██║",
      "██╔██╗██║",
      "██║╚████║",
      "██║░╚███║",
      "╚═╝░░╚══╝"],
   O:["░█████╗░",
      "██╔══██╗",
      "██║░░██║",
      "██║░░██║",
      "╚█████╔╝",
      "░╚════╝░"],
   P:["██████╗░",
      "██╔══██╗",
      "██████╔╝",
      "██╔═══╝░",
      "██║░░░░░",
      "╚═╝░░░░░"],
   Q:["░██████╗░",
      "██╔═══██╗",
      "██║██╗██║",
      "╚██████╔╝",
      "░╚═██╔═╝░",
      "░░░╚═╝░░░"],
   R:["██████╗░",
      "██╔══██╗",
      "██████╔╝",
      "██╔══██╗",
      "██║░░██║",
      "╚═╝░░╚═╝"],
   S:["░██████╗",
      "██╔════╝",
      "╚█████╗░",
      "░╚═══██╗",
      "██████╔╝",
      "╚═════╝░"],
   T:["████████╗",
      "╚══██╔══╝",
      "░░░██║░░░",
      "░░░██║░░░",
      "░░░██║░░░",
      "░░░╚═╝░░░"],
   U:["██╗░░░██╗",
      "██║░░░██║",
      "██║░░░██║",
      "██║░░░██║",
      "╚██████╔╝",
      "░╚═════╝░"],
   V:["██╗░░░██╗",
      "██║░░░██║",
      "╚██╗░██╔╝",
      "░╚████╔╝░",
      "░░╚██╔╝░░",
      "░░░╚═╝░░░"],
   W:["░██╗░░░░░░░██╗",
      "░██║░░██╗░░██║",
      "░╚██╗████╗██╔╝",
      "░░████╔═████║░",
      "░░╚██╔╝░╚██╔╝░",
      "░░░╚═╝░░░╚═╝░░"],
   X:["██╗░░██╗",
      "╚██╗██╔╝",
      "░╚███╔╝░",
      "░██╔██╗░",
      "██╔╝╚██╗",
      "╚═╝░░╚═╝"],
   Y:["██╗░░░██╗",
      "╚██╗░██╔╝",
      "░╚████╔╝░",
      "░░╚██╔╝░░",
      "░░░██║░░░",
      "░░░╚═╝░░░"],
   Z:["███████╗",
      "╚════██║",
      "░░███╔═╝",
      "██╔══╝░░",
      "███████╗",
      "╚══════╝"],
   "-":["░░░░░░",
        "░░░░░░",
        "█████╗",
        "╚════╝",
        "░░░░░░",
        "░░░░░░"],
   " ":["  ",
        "  ",
        "  ",
        "  ",
        "  ",
        "  "],
   ":":["██╗",
        "╚═╝",
        "░░░",
        "░░░",
        "██╗",
        "╚═╝"],
   "/":["░░░░██╗",
        "░░░██╔╝",
        "░░██╔╝░",
        "░██╔╝░░",
        "██╔╝░░░",
        "╚═╝░░░░"],
}
