export function table(data: (string | number | boolean | string[])[][]): string {
    if (data.length === 0) {
        return "";
    }

    const colCount = data[0].length;
    const colWidths: number[] = [];
    for (let col = 0; col < colCount; col++) {
        const colData = data.flatMap(row => row[col]);
        colWidths.push(Math.max(...colData.map(cell => (cell + "").length + 2)));
    }

    let out = "";
    data.forEach(row => {
        for (let col = 0; col < colCount; col++) {
            out += (row[col] + "").padEnd(colWidths[col], " ");
        }
        out += "\n";
    });
    return out;
}

export function wrap(message: string, at: number = 56): string {
    return message.replace(new RegExp(`(?![^\\n]{1,${at}}$)([^\\n]{1,${at}})\\s`, "g"), "$1\n");
}

/**
 * https://fsymbols.com/generators/carty/
 * @param title
 * @returns
 */
 export function asciiTitle(title: string): string {
    let out = "";
    for (let i = 0; i < 6; i++) {
        title.split("").forEach(letter => {
            const key = letter.toUpperCase();
            if (alphabet[key] !== undefined) {
                out += alphabet[key][i];
            }
        });
        out += "\n";
    }
    return out;
}

// prettier-ignore
const alphabet:{[letter:string]:string[]} = {
    A:["░█████╗░",
       "██╔══██╗",
       "███████║",
       "██╔══██║",
       "██║░░██║",
       "╚═╝░░╚═╝"],
    B:["██████╗░",
       "██╔══██╗",
       "██████╦╝",
       "██╔══██╗",
       "██████╦╝",
       "╚═════╝░"],
    C:["░█████╗░",
       "██╔══██╗",
       "██║░░╚═╝",
       "██║░░██╗",
       "╚█████╔╝",
       "░╚════╝░"],
    D:["██████╗░",
       "██╔══██╗",
       "██║░░██║",
       "██║░░██║",
       "██████╔╝",
       "╚═════╝░"],
    E:["███████╗",
       "██╔════╝",
       "█████╗░░",
       "██╔══╝░░",
       "███████╗",
       "╚══════╝"],
    F:["███████╗",
       "██╔════╝",
       "█████╗░░",
       "██╔══╝░░",
       "██║░░░░░",
       "╚═╝░░░░░"],
    G:["░██████╗░",
       "██╔════╝░",
       "██║░░██╗░",
       "██║░░╚██╗",
       "╚██████╔╝",
       "░╚═════╝░"],
    H:["██╗░░██╗",
       "██║░░██║",
       "███████║",
       "██╔══██║",
       "██║░░██║",
       "╚═╝░░╚═╝"],
    I:["██╗",
       "██║",
       "██║",
       "██║",
       "██║",
       "╚═╝"],
    J:["░░░░░██╗",
       "░░░░░██║",
       "░░░░░██║",
       "██╗░░██║",
       "╚█████╔╝",
       "░╚════╝░"],
    K:["██╗░░██╗",
       "██║░██╔╝",
       "█████═╝░",
       "██╔═██╗░",
       "██║░╚██╗",
       "╚═╝░░╚═╝"],
    L:["██╗░░░░░",
       "██║░░░░░",
       "██║░░░░░",
       "██║░░░░░",
       "███████╗",
       "╚══════╝"],
    M:["███╗░░░███╗",
       "████╗░████║",
       "██╔████╔██║",
       "██║╚██╔╝██║",
       "██║░╚═╝░██║",
       "╚═╝░░░░░╚═╝"],
    N:["███╗░░██╗",
       "████╗░██║",
       "██╔██╗██║",
       "██║╚████║",
       "██║░╚███║",
       "╚═╝░░╚══╝"],
    O:["░█████╗░",
       "██╔══██╗",
       "██║░░██║",
       "██║░░██║",
       "╚█████╔╝",
       "░╚════╝░"],
    P:["██████╗░",
       "██╔══██╗",
       "██████╔╝",
       "██╔═══╝░",
       "██║░░░░░",
       "╚═╝░░░░░"],
    Q:["░██████╗░",
       "██╔═══██╗",
       "██║██╗██║",
       "╚██████╔╝",
       "░╚═██╔═╝░",
       "░░░╚═╝░░░"],
    R:["██████╗░",
       "██╔══██╗",
       "██████╔╝",
       "██╔══██╗",
       "██║░░██║",
       "╚═╝░░╚═╝"],
    S:["░██████╗",
       "██╔════╝",
       "╚█████╗░",
       "░╚═══██╗",
       "██████╔╝",
       "╚═════╝░"],
    T:["████████╗",
       "╚══██╔══╝",
       "░░░██║░░░",
       "░░░██║░░░",
       "░░░██║░░░",
       "░░░╚═╝░░░"],
    U:["██╗░░░██╗",
       "██║░░░██║",
       "██║░░░██║",
       "██║░░░██║",
       "╚██████╔╝",
       "░╚═════╝░"],
    V:["██╗░░░██╗",
       "██║░░░██║",
       "╚██╗░██╔╝",
       "░╚████╔╝░",
       "░░╚██╔╝░░",
       "░░░╚═╝░░░"],
    W:["░██╗░░░░░░░██╗",
       "░██║░░██╗░░██║",
       "░╚██╗████╗██╔╝",
       "░░████╔═████║░",
       "░░╚██╔╝░╚██╔╝░",
       "░░░╚═╝░░░╚═╝░░"],
    X:["██╗░░██╗",
       "╚██╗██╔╝",
       "░╚███╔╝░",
       "░██╔██╗░",
       "██╔╝╚██╗",
       "╚═╝░░╚═╝"],
    Y:["██╗░░░██╗",
       "╚██╗░██╔╝",
       "░╚████╔╝░",
       "░░╚██╔╝░░",
       "░░░██║░░░",
       "░░░╚═╝░░░"],
    Z:["███████╗",
       "╚════██║",
       "░░███╔═╝",
       "██╔══╝░░",
       "███████╗",
       "╚══════╝"],
    "-":["░░░░░░",
         "░░░░░░",
         "█████╗",
         "╚════╝",
         "░░░░░░",
         "░░░░░░"],
    " ":["  ",
         "  ",
         "  ",
         "  ",
         "  ",
         "  "],
    ":":["██╗",
         "╚═╝",
         "░░░",
         "░░░",
         "██╗",
         "╚═╝"],
    "/":["░░░░██╗",
         "░░░██╔╝",
         "░░██╔╝░",
         "░██╔╝░░",
         "██╔╝░░░",
         "╚═╝░░░░"],
}
